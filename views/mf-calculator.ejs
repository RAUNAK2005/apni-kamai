<%- include('partials/header') %>
<section class="calculator-section">
  <h2 class="calculator-title">Mutual Fund Calculator</h2>
  
  <div class="calculator-container">
    <div class="input-group">
      <label for="mf-amount">Initial Investment Amount</label>
      <div class="input-with-icon">
        <i class="fas fa-rupee-sign"></i>
        <input type="number" id="mf-amount" placeholder="e.g., 100000" min="0" required>
      </div>
    </div>

    <div class="input-group">
      <label for="mf-rate">Expected Return Rate (%)</label>
      <div class="input-with-icon">
        <i class="fas fa-percent"></i>
        <input type="number" id="mf-rate" placeholder="e.g., 12" min="0" max="100" step="0.1" required>
      </div>
    </div>

    <div class="input-group">
      <label for="mf-term">Investment Period (Years)</label>
      <div class="input-with-icon">
        <i class="fas fa-calendar-alt"></i>
        <input type="number" id="mf-term" placeholder="e.g., 5" min="1" required>
      </div>
    </div>

    <div class="button-group">
      <button id="calculateBtn" class="calculator-btn calculate-btn">
        <i class="fas fa-calculator"></i> Calculate
      </button>
      <button id="resetBtn" class="calculator-btn reset-btn">
        <i class="fas fa-redo"></i> Reset
      </button>
    </div>

    <div id="resultSection" class="result-section" style="display: none;">
      <div class="results-chart-container">
        <div class="results-container">
          <div class="result-grid">
            <div class="result-card">
              <h3>Initial Investment</h3>
              <p id="mf-invested" class="result-value">₹0</p>
            </div>
            <div class="result-card">
              <h3>Wealth Gained</h3>
              <p id="mf-growth" class="result-value">₹0</p>
            </div>
            <div class="result-card highlight">
              <h3>Future Value</h3>
              <p id="mf-total" class="result-value highlight">₹0</p>
            </div>
          </div>
        </div>
        <div class="chart-container">
          <canvas id="mfChart"></canvas>
        </div>
      </div>
    </div>
  </div>
</section>

<div id="error-toast" class="error-toast"></div>

<style>
.calculator-section {
  max-width: 900px;
  margin: 2rem auto;
  padding: 2rem;
  background: rgba(255, 255, 255, 0.95);
  border-radius: 20px;
  box-shadow: 0 8px 32px rgba(31, 38, 135, 0.37);
}

.calculator-title {
  text-align: center;
  margin-bottom: 2rem;
  font-size: 2.5rem;
  color: #1a4b8c;
  font-weight: bold;
}

.input-group {
  margin-bottom: 1.5rem;
}

.input-group label {
  display: block;
  margin-bottom: 0.5rem;
  color: #1a4b8c;
  font-weight: 600;
  font-size: 1.1rem;
  opacity: 1;
}

.input-with-icon {
  position: relative;
  display: flex;
  align-items: center;
}

.input-with-icon i {
  position: absolute;
  left: 1rem;
  color: #1a4b8c;
  opacity: 0.8;
}

.input-with-icon input {
  width: 100%;
  padding: 1rem 1rem 1rem 3rem;
  background: rgba(255, 255, 255, 0.9);
  border: 2px solid #1a4b8c;
  border-radius: 12px;
  color: #1a4b8c;
  font-size: 1rem;
  transition: all 0.3s ease;
}

.input-with-icon input:focus {
  outline: none;
  border-color: #3b82f6;
  box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
}

.button-group {
  display: flex;
  gap: 1rem;
  margin-top: 2rem;
}

.calculator-btn {
  flex: 1;
  padding: 1rem;
  border: none;
  border-radius: 12px;
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  transition: all 0.3s ease;
}

.calculate-btn {
  background: #3b82f6;
  color: white;
}

.reset-btn {
  background: #ef4444;
  color: white;
}

.calculator-btn:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
}

.results-chart-container {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 2rem;
  margin-top: 2rem;
}

.result-grid {
  display: grid;
  gap: 1rem;
}

.result-card {
  background: rgba(255, 255, 255, 0.95);
  padding: 1.5rem;
  border-radius: 12px;
  text-align: center;
  border: 2px solid #3b82f6;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

.result-card h3 {
  color: #1a4b8c;
  font-size: 1.1rem;
  margin-bottom: 0.5rem;
  opacity: 1;
}

.result-card.highlight {
  background: #3b82f6;
  border-color: #2563eb;
}

.result-card.highlight h3 {
  color: white;
}

.result-value {
  font-size: 1.5rem;
  font-weight: 700;
  color: #3b82f6;
}

.result-value.highlight {
  color: white;
  font-size: 1.8rem;
}

.chart-container {
  background: rgba(255, 255, 255, 0.95);
  padding: 1.5rem;
  border-radius: 12px;
  border: 2px solid #3b82f6;
  min-height: 300px;
}

.error-toast {
  position: fixed;
  bottom: 20px;
  left: 50%;
  transform: translateX(-50%);
  background: #ff4444;
  color: white;
  padding: 1rem 2rem;
  border-radius: 8px;
  font-weight: 500;
  opacity: 0;
  transition: opacity 0.3s ease;
  z-index: 1000;
}

.error-toast.show {
  opacity: 1;
}

@media (max-width: 768px) {
  .calculator-section {
    margin: 1rem;
    padding: 1rem;
  }
  
  .calculator-title {
    font-size: 2rem;
  }
  
  .button-group {
    flex-direction: column;
  }
  
  .results-chart-container {
    grid-template-columns: 1fr;
  }
}
</style>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
  let mfChart = null;
  const calculateBtn = document.getElementById('calculateBtn');
  const resetBtn = document.getElementById('resetBtn');
  
  function formatCurrency(amount) {
    return new Intl.NumberFormat('en-IN', {
      style: 'currency',
      currency: 'INR',
      maximumFractionDigits: 0
    }).format(amount);
  }
  
  function calculateMF() {
    const principal = parseFloat(document.getElementById('mf-amount').value);
    const rate = parseFloat(document.getElementById('mf-rate').value);
    const years = parseFloat(document.getElementById('mf-term').value);
    
    if (!principal || principal <= 0) {
      alert('Please enter a valid investment amount');
      return;
    }
    if (!rate || rate <= 0 || rate > 100) {
      alert('Please enter a valid return rate between 0 and 100');
      return;
    }
    if (!years || years <= 0) {
      alert('Please enter a valid investment period');
      return;
    }
    
    const futureValue = principal * Math.pow(1 + (rate / 100), years);
    const growth = futureValue - principal;
    
    document.getElementById('mf-invested').textContent = formatCurrency(principal);
    document.getElementById('mf-growth').textContent = formatCurrency(growth);
    document.getElementById('mf-total').textContent = formatCurrency(futureValue);
    
    document.getElementById('resultSection').style.display = 'block';
    
    if (mfChart) {
      mfChart.destroy();
    }
    
    const ctx = document.getElementById('mfChart').getContext('2d');
    mfChart = new Chart(ctx, {
      type: 'doughnut',
      data: {
        labels: ['Initial Investment', 'Wealth Gained'],
        datasets: [{
          data: [principal, growth],
          backgroundColor: ['#3b82f6', '#22c55e'],
          borderWidth: 0
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        cutout: '60%',
        plugins: {
          legend: {
            position: 'bottom',
            labels: {
              color: '#1a4b8c',
              padding: 20,
              font: { size: 14 }
            }
          }
        },
        animation: {
          animateScale: true,
          animateRotate: true
        }
      }
    });
  }
  
  function resetCalculator() {
    document.getElementById('mf-amount').value = '';
    document.getElementById('mf-rate').value = '';
    document.getElementById('mf-term').value = '';
    
    document.getElementById('mf-invested').textContent = '₹0';
    document.getElementById('mf-growth').textContent = '₹0';
    document.getElementById('mf-total').textContent = '₹0';
    
    document.getElementById('resultSection').style.display = 'none';
    
    if (mfChart) {
      mfChart.destroy();
      mfChart = null;
    }
  }
  
  // Add event listeners
  calculateBtn.addEventListener('click', calculateMF);
  resetBtn.addEventListener('click', resetCalculator);
  
  // Add Enter key support
  ['mf-amount', 'mf-rate', 'mf-term'].forEach(id => {
    document.getElementById(id).addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        calculateMF();
      }
    });
  });
});
</script>

<%- include('partials/footer') %>